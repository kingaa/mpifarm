
R version 2.13.1 (2011-07-08)
Copyright (C) 2011 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-unknown-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> require(Rmpi)
Loading required package: Rmpi
> require(mpifarm)
Loading required package: mpifarm
> 
> ncpus <- 10
> 
> mpi.spawn.Rslaves(nslaves=ncpus,needlog=T)
	10 slaves are spawned successfully. 0 failed.
master  (rank 0 , comm 1) of size 11 is running on: nyx5000 
slave1  (rank 1 , comm 1) of size 11 is running on: nyx5000 
slave2  (rank 2 , comm 1) of size 11 is running on: nyx5000 
slave3  (rank 3 , comm 1) of size 11 is running on: nyx5000 
... ... ...
slave9  (rank 9 , comm 1) of size 11 is running on: nyx5005 
slave10 (rank 10, comm 1) of size 11 is running on: nyx5006 
> 
> set.seed(1066)
> seeds <- ceiling(runif(n=ncpus,0,2^31))
> x <- mpi.farm({set.seed(seed)},joblist=lapply(seeds,function(x)list(seed=x)),info=F)
> 
> x <- lapply(1:100,function(k)list(a=k,b=rnorm(1)))
> y <- mpi.farm(a+b,x,info=F)
> 
> x <- lapply(1:100,function(k)list(a=k))
> y <- mpi.farm({for (j in 1:10000) j <- j+1; a},x,info=F)
> y <- y[order(as.numeric(names(y)))]
> stopifnot(sum(diff(as.numeric(y))!=1)==0)
> 
> y <- mpi.farm({if(runif(1)<0.1)stop('yikes');a+runif(1)},x,info=F)
Warning messages:
1: mpi.farm: slave 5 reports: Error in eval(expr, envir, enclos) : yikes
 
2: mpi.farm: slave 2 reports: Error in eval(expr, envir, enclos) : yikes
 
3: mpi.farm: slave 5 reports: Error in eval(expr, envir, enclos) : yikes
 
4: mpi.farm: slave 3 reports: Error in eval(expr, envir, enclos) : yikes
 
5: mpi.farm: slave 4 reports: Error in eval(expr, envir, enclos) : yikes
 
6: mpi.farm: slave 2 reports: Error in eval(expr, envir, enclos) : yikes
 
7: mpi.farm: slave 3 reports: Error in eval(expr, envir, enclos) : yikes
 
8: mpi.farm: slave 4 reports: Error in eval(expr, envir, enclos) : yikes
 
> warnings()
Warning messages:
1: mpi.farm: slave 5 reports: Error in eval(expr, envir, enclos) : yikes

2: mpi.farm: slave 2 reports: Error in eval(expr, envir, enclos) : yikes

3: mpi.farm: slave 5 reports: Error in eval(expr, envir, enclos) : yikes

4: mpi.farm: slave 3 reports: Error in eval(expr, envir, enclos) : yikes

5: mpi.farm: slave 4 reports: Error in eval(expr, envir, enclos) : yikes

6: mpi.farm: slave 2 reports: Error in eval(expr, envir, enclos) : yikes

7: mpi.farm: slave 3 reports: Error in eval(expr, envir, enclos) : yikes

8: mpi.farm: slave 4 reports: Error in eval(expr, envir, enclos) : yikes

> 
> seeds <- as.integer(ceiling(runif(n=321,1,2^31)))
> x <- lapply(1:321,function(k)list(a=k,b=10*k,seed=seeds[k]))
> y1 <- mpi.farm({set.seed(seed); a+mean(rnorm(n=b))},joblist=x,checkpoint.file="mpitest.rda",checkpoint=23,info=F)
> load("mpitest.rda")
> y2 <- mpi.farm({set.seed(seed); a+mean(rnorm(n=b))},joblist=unfinished,finished=finished,checkpoint.file="mpitest.rda",checkpoint=23,info=F)
Warning messages:
1: file 'mpitest.rda' exists, backup 'mpitest.rda.bak-1' created 
2: mpi.farm warning: more slaves than jobs 
> y1 <- y1[order(names(y1))]
> y2 <- y2[order(names(y2))]
> stopifnot(identical(y1,y2))
> 
> unfinished <- x
> finished <- list()
> y2 <- mpi.farm({set.seed(seed); a+mean(rnorm(n=b))},joblist=unfinished,finished=finished,checkpoint.file="mpitest.rda",checkpoint=23,info=F)
Warning message:
file 'mpitest.rda' exists, backup 'mpitest.rda.bak-2' created 
> y2 <- mpi.farm({set.seed(seed); a+mean(rnorm(n=b))},joblist=unfinished,finished=finished,checkpoint.file="mpitest.rda",checkpoint=23,info=F)
Warning message:
file 'mpitest.rda' exists, backup 'mpitest.rda.bak-3' created 
> y2 <- mpi.farm({set.seed(seed); a+mean(rnorm(n=b))},joblist=unfinished,finished=finished,checkpoint.file="mpitest.rda",checkpoint=23,info=F)
Warning message:
file 'mpitest.rda' exists, backup 'mpitest.rda.bak-4' created 
> y2 <- mpi.farm({set.seed(seed); a+mean(rnorm(n=b))},joblist=unfinished,finished=finished,checkpoint.file="mpitest.rda",checkpoint=23,info=F)
Warning message:
file 'mpitest.rda' exists, backup 'mpitest.rda.bak-5' created 
> y2 <- mpi.farm({set.seed(seed); a+mean(rnorm(n=b))},joblist=unfinished,finished=finished,checkpoint.file="mpitest.rda",checkpoint=23,info=F)
Warning message:
file 'mpitest.rda' exists, backup 'mpitest.rda.bak-6' created 
> y2 <- mpi.farm({set.seed(seed); a+mean(rnorm(n=b))},joblist=unfinished,finished=finished,checkpoint.file="mpitest.rda",checkpoint=23,info=F)
Warning message:
file 'mpitest.rda' exists, backup 'mpitest.rda.bak-7' created 
> y2 <- mpi.farm({set.seed(seed); a+mean(rnorm(n=b))},joblist=unfinished,finished=finished,checkpoint.file="mpitest.rda",checkpoint=23,info=F)
Warning message:
file 'mpitest.rda' exists, backup 'mpitest.rda.bak-8' created 
> y2 <- mpi.farm({set.seed(seed); a+mean(rnorm(n=b))},joblist=unfinished,finished=finished,checkpoint.file="mpitest.rda",checkpoint=23,info=F)
Warning message:
file 'mpitest.rda' exists, backup 'mpitest.rda.bak-9' created 
> y2 <- mpi.farm({set.seed(seed); a+mean(rnorm(n=b))},joblist=unfinished,finished=finished,checkpoint.file="mpitest.rda",checkpoint=23,info=F)
Warning message:
file 'mpitest.rda' exists, backup 'mpitest.rda.bak-10' created 
> y2 <- mpi.farm({set.seed(seed); a+mean(rnorm(n=b))},joblist=unfinished,finished=finished,checkpoint.file="mpitest.rda",checkpoint=23,info=F)
Warning message:
file 'mpitest.rda' exists, backup 'mpitest.rda.bak-11' created 
> y2 <- mpi.farm({set.seed(seed); a+mean(rnorm(n=b))},joblist=unfinished,finished=finished,checkpoint.file="mpitest.rda",checkpoint=23,info=F)
Warning message:
file 'mpitest.rda' exists, backup 'mpitest.rda.bak-12' created 
> 
> x <- lapply(1:50,function(k)list(a=k,b=10*k,done=FALSE))
> y <- mpi.farm(
+               {
+                list(a=a-1,b=b,m=mean(rnorm(n=b)),done=(a<=1))
+                },
+               x,
+               stop.condition=done,
+               checkpoint.file="mpitest.rda",
+               checkpoint=500,
+               info=FALSE
+               )
Warning message:
file 'mpitest.rda' exists, backup 'mpitest.rda.bak-13' created 
> 
> seeds <- as.integer(ceiling(runif(n=100,1,2^31)))
> x1 <- lapply(1:100,function(k)list(a=k,b=0,done=0,seed=seeds[k]))
> y1 <- mpi.farm(
+                {
+                  set.seed(seed)
+                  list(
+                       a=a,
+                       b=b+rnorm(1),
+                       done=done+1,
+                       seed=seed
+                       )
+                },
+                joblist=x1,
+                stop.condition=((abs(b)>2)|(done>10)),
+                info=F
+                )
> 
> x2 <- lapply(1:100,function(k)list(a=k,b=rnorm(1),seed=seeds[k]))
> z1 <- unlist(mpi.farm({set.seed(seed); a+b},joblist=x2,info=F))
> 
> mpi.close.Rslaves()
--------------------------------------------------------------------------
An MPI process has executed an operation involving a call to the
"fork()" system call to create a child process.  Open MPI is currently
operating in a condition that could result in memory corruption or
other system errors; your MPI job may hang, crash, or produce silent
data corruption.  The use of fork() (or system() or other calls that
create child processes) is strongly discouraged.  

The process that invoked fork was:

  Local host:          nyx5000.engin.umich.edu (PID 4472)
  MPI_COMM_WORLD rank: 0

If you are *absolutely sure* that your application will successfully
and correctly survive a call to fork(), you may disable this warning
by setting the mpi_warn_on_fork MCA parameter to 0.
--------------------------------------------------------------------------
[1] 1
> 
> y2 <- mpi.farm(
+                {
+                  set.seed(seed)
+                  list(
+                       a=a,
+                       b=b+rnorm(1),
+                       done=done+1,
+                       seed=seed
+                       )
+                },
+                joblist=x1,
+                stop.condition=((abs(b)>2)|(done>10)),
+                info=F
+                )
> 
> z2 <- unlist(mpi.farm({set.seed(seed); a+b},joblist=x2,info=F))
> 
> y1 <- y1[order(as.numeric(names(y1)))]
> y2 <- y2[order(as.numeric(names(y2)))]
> stopifnot(identical(y1,y2))
> 
> z1 <- z1[order(as.numeric(names(z1)))]
> stopifnot(identical(z1,z2))
> 
> mpi.exit()
[1] "Detaching Rmpi. Rmpi cannot be used unless relaunching R."
> 
