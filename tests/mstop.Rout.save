
R version 2.14.2 (2012-02-29)
Copyright (C) 2012 The R Foundation for Statistical Computing
ISBN 3-900051-07-0
Platform: x86_64-unknown-linux-gnu (64-bit)

R is free software and comes with ABSOLUTELY NO WARRANTY.
You are welcome to redistribute it under certain conditions.
Type 'license()' or 'licence()' for distribution details.

R is a collaborative project with many contributors.
Type 'contributors()' for more information and
'citation()' on how to cite R or R packages in publications.

Type 'demo()' for some demos, 'help()' for on-line help, or
'help.start()' for an HTML browser interface to help.
Type 'q()' to quit R.

> library(mpifarm)
> 
> if (require(Rmpi)) {
+ 
+   ncpus <- 6
+ 
+   mpi.spawn.Rslaves(nslaves=ncpus,needlog=T)
+ 
+   njobs <- 200
+ 
+   set.seed(34588366L)
+   seeds <- as.integer(ceiling(runif(n=njobs,min=0,max=2^31-1)))
+   x <- list()
+   for (i in seq_along(seeds)) {
+     x[[i]] <- list(seed=seeds[i],n=0,b=-1)
+   }
+ 
+   tic <- Sys.time()
+ 
+   y1 <- mpi.farm(
+                  {
+                    save.seed <- get(".Random.seed",envir=.GlobalEnv)
+                    if (n==0) set.seed(seed)
+                    else assign(".Random.seed",rng.state,envir=.GlobalEnv)
+                    b <- rnorm(1)
+                    n <- n+1
+                    rng.state <- get(".Random.seed",envir=.GlobalEnv)
+                    assign(".Random.seed",save.seed,envir=.GlobalEnv)
+                    list(
+                         seed=seed,
+                         rng.state=rng.state,
+                         b=b,
+                         n=n
+                         )
+                  },
+                  joblist=x,
+                  stop.condition=b[1]>0,
+                  chunk=1,
+                  info=FALSE
+                  )
+ 
+   toc <- Sys.time()
+   print(toc-tic)
+ 
+   tic <- Sys.time()
+ 
+   y2 <- mpi.farm(
+                  {
+                    save.seed <- get(".Random.seed",envir=.GlobalEnv)
+                    if (n==0) set.seed(seed)
+                    else assign(".Random.seed",rng.state,envir=.GlobalEnv)
+                    b <- rnorm(1)
+                    n <- n+1
+                    rng.state <- get(".Random.seed",envir=.GlobalEnv)
+                    assign(".Random.seed",save.seed,envir=.GlobalEnv)
+                    list(
+                         seed=seed,
+                         rng.state=rng.state,
+                         b=b,
+                         n=n
+                         )
+                  },
+                  joblist=x,
+                  stop.condition=b[1]>0,
+                  chunk=8,
+                  blocking=TRUE,
+                  info=FALSE
+                  )
+ 
+   toc <- Sys.time()
+   print(toc-tic)
+ 
+   tic <- Sys.time()
+ 
+   y3 <- mpi.farm(
+                  {
+                    save.seed <- get(".Random.seed",envir=.GlobalEnv)
+                    if (n==0) set.seed(seed)
+                    else assign(".Random.seed",rng.state,envir=.GlobalEnv)
+                    b <- rnorm(1)
+                    n <- n+1
+                    rng.state <- get(".Random.seed",envir=.GlobalEnv)
+                    assign(".Random.seed",save.seed,envir=.GlobalEnv)
+                    list(
+                         seed=seed,
+                         rng.state=rng.state,
+                         b=b,
+                         n=n
+                         )
+                  },
+                  joblist=x,
+                  stop.condition=b[1]>0,
+                  chunk=8,
+                  blocking=FALSE,
+                  info=FALSE
+                  )
+ 
+   toc <- Sys.time()
+   print(toc-tic)
+ 
+   mpi.close.Rslaves()
+ 
+   z1 <- sapply(y1,function(x)x$b)
+   n1 <- sapply(y1,function(x)x$n)
+ 
+   z2 <- sapply(y2,function(x)x$b)
+   n2 <- sapply(y2,function(x)x$n)
+ 
+   z3 <- sapply(y3,function(x)x$b)
+   n3 <- sapply(y3,function(x)x$n)
+ 
+   stopifnot(identical(z1,z2)&&identical(n1,n2))
+   stopifnot(identical(z2,z3)&&identical(n2,n3))
+ 
+ }
Loading required package: Rmpi
	6 slaves are spawned successfully. 0 failed.
master (rank 0, comm 1) of size 7 is running on: eeb-quercus 
slave1 (rank 1, comm 1) of size 7 is running on: eeb-quercus 
slave2 (rank 2, comm 1) of size 7 is running on: eeb-quercus 
slave3 (rank 3, comm 1) of size 7 is running on: eeb-quercus 
slave4 (rank 4, comm 1) of size 7 is running on: eeb-quercus 
slave5 (rank 5, comm 1) of size 7 is running on: eeb-quercus 
slave6 (rank 6, comm 1) of size 7 is running on: eeb-quercus 
Time difference of 4.262271 secs
Time difference of 0.1344926 secs
Time difference of 0.711906 secs
> 
